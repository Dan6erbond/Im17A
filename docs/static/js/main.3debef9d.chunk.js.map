{"version":3,"sources":["components/Navigation.tsx","components/ScrollTop.tsx","components/Layout.tsx","components/calculator/Calculator.tsx","components/summaries/Summaries.tsx","components/home/Home.tsx","App.tsx","components/styles.ts","serviceWorker.ts","index.tsx"],"names":["Navigation","props","state","drawerOpen","toggleDrawer","bind","open","this","setState","classes","AppBar","Toolbar","IconButton","onClick","edge","className","menuButton","color","aria-label","Typography","variant","title","grow","Button","component","Link","to","id","SwipeableDrawer","anchor","onClose","onOpen","List","ListItem","button","ListItemText","primary","drawerTitle","Divider","ListItemIcon","React","ScrollTop","children","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","event","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","root","Layout","CssBaseline","Container","maxWidth","Fab","size","Subject","name","v","grades","sum","cnt","i","length","g","last","avg","Math","round","isNaN","History","Sciences","Project","index","Subjects","subjects","average","minusPoints","projectMinusPoints","mp","pSum","pCnt","fp","pAvg","pmp","CalculatorSmall","cookies","get","undefined","map","s","calculate","Card","cardsRoot","CardContent","cardsTitle","gutterBottom","toPrecision","CardActions","Calculator","setGrade","grade","subjectIndex","gradeIndex","Number","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","align","TableBody","key","scope","Array","from","j","TextField","label","value","inputProps","min","max","step","onChange","type","InputLabelProps","shrink","style","width","Badge","badgeContent","InputProps","readOnly","error","colSpan","textAlign","paddingBottom","set","JSON","stringify","Summary","author","date","parsedDate","subject","topic","filename","filepath","moment","valueOf","file","process","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","checked","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","createStyles","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","dark","flex","EnhancedTableToolbar","downloadSelected","clsx","Tooltip","SummariesSmall","summaries","gridListRoot","Grid","container","slice","summary","item","xs","sm","height","display","gridTemplateRows","alignSelf","pos","href","download","startIcon","Summaries","selected","page","rowsPerPage","setOrder","setOrderBy","setSelected","setPage","setRowsPerPage","getSummaryBlobs","summaryCallback","callback","shift","fetch","then","response","blob","selectedSummaries","filter","zip","JSZip","base64","generateAsync","content","saveAs","dense","paper","newSelecteds","isAsc","isItemSelected","indexOf","labelId","hover","newSelected","selectedIndex","concat","handleClick","aria-checked","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","SummariesContainer","setSummaries","ok","Error","statusText","json","data","catch","console","useTheme","useMediaQuery","breakpoints","up","TabPanel","other","hidden","aria-labelledby","a11yProps","Home","vertical","useState","setValue","handleChange","newValue","verticalTabsRoot","horizontalTabsRoot","Tabs","orientation","verticalTabs","Tab","indicatorColor","scrollButtons","horizontalTabs","createMuiTheme","compose","withCookies","withStyles","position","bottom","right","drawer","flexShrink","fontWeight","flexGrow","marginRight","search","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","toolbar","mixins","minWidth","background","borderBottom","divider","borderRight","bullet","margin","transform","fontSize","marginBottom","tableRoot","tablePaper","border","clip","overflow","top","flexWrap","gridList","ThemeProvider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","CookiesProvider","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3debef9d.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport {styles} from './styles';\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    SwipeableDrawer,\r\n    Toolbar,\r\n    Typography,\r\n    WithStyles\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface NavigationState {\r\n    drawerOpen: boolean;\r\n}\r\n\r\nexport default class Navigation extends React.Component<WithStyles<typeof styles>, NavigationState> {\r\n    constructor(props: WithStyles<typeof styles>) {\r\n        super(props);\r\n        this.state = {drawerOpen: false};\r\n\r\n        this.toggleDrawer = this.toggleDrawer.bind(this);\r\n    }\r\n\r\n\r\n    private toggleDrawer(open: boolean) {\r\n        this.setState({drawerOpen: open});\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton onClick={() => this.toggleDrawer(true)} edge=\"start\" className={classes.menuButton}\r\n                                    color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Im17A\r\n                        </Typography>\r\n                        <div className={classes.grow}/>\r\n                        <Button color=\"inherit\" component={Link} to=\"/\">Startseite</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Toolbar id=\"back-to-top-anchor\"/>\r\n\r\n                <SwipeableDrawer\r\n                    anchor=\"left\"\r\n                    open={this.state.drawerOpen}\r\n                    onClose={() => this.toggleDrawer(false)}\r\n                    onOpen={() => this.toggleDrawer(true)}\r\n                >\r\n                    <List>\r\n                        <ListItem button component={Link} to=\"/\">\r\n                            <ListItemText primary=\"Im17A\" classes={{primary: classes.drawerTitle}}/>\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ListItem button component={Link} to=\"/summaries\">\r\n                            <ListItemIcon><DescriptionIcon/></ListItemIcon>\r\n                            <ListItemText>Zusammenfassungen</ListItemText>\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ListItem button component={Link} to=\"/calculator\">\r\n                            <ListItemIcon><FunctionsIcon/></ListItemIcon>\r\n                            <ListItemText>Notenrechner</ListItemText>\r\n                        </ListItem>\r\n                    </List>\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {useScrollTrigger, WithStyles, Zoom} from \"@material-ui/core\";\r\nimport {styles} from './styles';\r\n\r\ninterface ScrollTopProps {\r\n    children: React.ReactElement;\r\n}\r\n\r\nexport default function ScrollTop(props: ScrollTopProps & WithStyles<typeof styles>) {\r\n    const {children} = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event: React.MouseEvent) => {\r\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\r\n            '#back-to-top-anchor',\r\n        );\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={props.classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}","import * as React from \"react\";\r\nimport {Container, CssBaseline, Fab, WithStyles} from \"@material-ui/core\";\r\nimport {styles} from './styles';\r\nimport Navigation from \"./Navigation\";\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport ScrollTop from \"./ScrollTop\";\r\n\r\ninterface LayoutProps {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function Layout(props: LayoutProps & WithStyles<typeof styles>){\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n\r\n            <Navigation classes={classes} />\r\n\r\n            <br/>\r\n\r\n            <Container maxWidth=\"lg\">\r\n                {props.children}\r\n            </Container>\r\n\r\n            <br/>\r\n\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from \"react\";\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    WithStyles,\r\n    Typography,\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody, Button, Badge, CardContent, Card, CardActions\r\n} from \"@material-ui/core\";\r\nimport {styles} from \"../styles\";\r\nimport {ReactCookieProps} from \"react-cookie\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Subject {\r\n    grades: number[];\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", v?: any) {\r\n        this.name = v && v.name ? v.name : name;\r\n        this.grades = v && v.grades ? v.grades : [0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n\r\n    average(): number {\r\n        let sum = 0;\r\n        let cnt = 0;\r\n\r\n        for (let i = 0; i < this.grades.length - 1; i++) {\r\n            let g = this.grades[i];\r\n            if (g === 0 || g === -1)\r\n                continue;\r\n            sum += g;\r\n            cnt++;\r\n        }\r\n\r\n        let last = this.grades[this.grades.length - 1];\r\n\r\n        let avg = 0;\r\n\r\n        if (cnt === 0 && last !== 0 && last !== -1)\r\n            avg = last;\r\n        else if (last !== 0 && last !== -1)\r\n            avg = (sum / cnt + last) / 2;\r\n        else\r\n            avg = sum / cnt;\r\n\r\n        avg = Math.round(avg * 2) / 2;\r\n\r\n        return !isNaN(avg) ? avg : 0;\r\n    }\r\n}\r\n\r\nclass History extends Subject {\r\n    grades = [0, 0, 0, 0, -1, -1, -1];\r\n\r\n    constructor() {\r\n        super(\"Geschichte und Politik\");\r\n    }\r\n}\r\n\r\nclass Sciences extends Subject {\r\n    grades = [0, 0, -1, -1, -1, -1, -1];\r\n\r\n    constructor() {\r\n        super(\"Technik und Umwelt\");\r\n    }\r\n}\r\n\r\nclass Project extends Subject {\r\n    grades = [-1, -1, -1, -1, -1, -1, -1];\r\n\r\n    constructor(name: string, index: number) {\r\n        super(name);\r\n        this.grades[index] = 0;\r\n    }\r\n}\r\n\r\nclass Subjects {\r\n    subjects: Subject[];\r\n    average: number = 0;\r\n    minusPoints: number = 0;\r\n    projectMinusPoints: number = 0;\r\n\r\n    constructor(subjects: Subject[]) {\r\n        this.subjects = subjects;\r\n    }\r\n\r\n    calculate() {\r\n        const subjects = this.subjects;\r\n\r\n        let mp = 0;\r\n\r\n        let sum = 0;\r\n        let cnt = 0;\r\n        ;\r\n\r\n        let pSum = 0;\r\n        let pCnt = 0;\r\n\r\n        let fp = 0;\r\n\r\n        for (let i = 0; i < subjects.length; i++) {\r\n            let s = subjects[i];\r\n            let avg = s.average();\r\n\r\n            if (avg !== 0) {\r\n                if (i < subjects.length - 5) {\r\n                    sum += avg;\r\n                    cnt++;\r\n\r\n                    if (avg < 4)\r\n                        mp += 4 - avg;\r\n                } else if (i === subjects.length - 1) {\r\n                    fp = avg;\r\n                } else {\r\n                    pSum += avg;\r\n                    pCnt++;\r\n                }\r\n            }\r\n        }\r\n\r\n        let pAvg = 0;\r\n        let pmp = 0;\r\n\r\n        if (pCnt !== 0 && fp !== 0) {\r\n            let spAvg = pSum / pCnt;\r\n            pAvg = (spAvg + fp) / 2;\r\n            pAvg = Math.round(pAvg * 2) / 2;\r\n\r\n            if (pAvg < 4)\r\n                pmp = 4 - pAvg;\r\n            mp += pmp;\r\n        }\r\n\r\n        let avg = 0;\r\n\r\n        if (cnt !== 0 && pAvg !== 0) {\r\n            avg = (sum + pAvg) / (cnt + 1);\r\n        }\r\n\r\n        this.average = avg;\r\n        this.minusPoints = mp;\r\n        this.projectMinusPoints = pmp;\r\n    }\r\n}\r\n\r\ninterface CalculatorState {\r\n    subjects?: Subjects;\r\n}\r\n\r\nexport class CalculatorSmall extends React.Component<WithStyles<typeof styles> & ReactCookieProps, CalculatorState> {\r\n    constructor(props: WithStyles<typeof styles> & ReactCookieProps) {\r\n        super(props);\r\n\r\n        let subjects: Subject[];\r\n\r\n        const {cookies} = this.props;\r\n        subjects = cookies ? cookies.get(\"subjects\") : undefined;\r\n\r\n        if (subjects) {\r\n            subjects = subjects.map(s => new Subject(\"\", s));\r\n            this.state = {subjects: new Subjects(subjects)};\r\n        } else {\r\n            this.state = {subjects: undefined}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {subjects} = this.state;\r\n        if (subjects) {\r\n            subjects.calculate();\r\n            this.setState({subjects: subjects});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {subjects} = this.state;\r\n\r\n        return (\r\n            <Card className={classes.cardsRoot}>\r\n                <CardContent>\r\n                    <Typography className={classes.cardsTitle} color=\"textSecondary\" gutterBottom>\r\n                        Notenrechner\r\n                    </Typography>\r\n                    {subjects ? <div>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            Durchschnitt: {subjects.average.toPrecision(2)}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Minuspunkte: {subjects.minusPoints}\r\n                        </Typography>\r\n                    </div> : <div>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            Noch keine Noten eingetragen\r\n                        </Typography>\r\n                    </div>}\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\" component={Link} to=\"/calculator\">Zum Notenrechner</Button>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Calculator extends React.Component<WithStyles<typeof styles> & ReactCookieProps, CalculatorState> {\r\n    constructor(props: WithStyles<typeof styles> & ReactCookieProps) {\r\n        super(props);\r\n\r\n        this.setGrade = this.setGrade.bind(this);\r\n\r\n        let subjects: Subject[];\r\n\r\n        const {cookies} = this.props;\r\n        subjects = cookies ? cookies.get(\"subjects\") : undefined;\r\n\r\n        if (subjects) {\r\n            subjects = subjects.map(s => new Subject(\"\", s));\r\n        } else {\r\n            subjects = [\r\n                new Subject(\"Deutsch\"),\r\n                new Subject(\"Französisch\"),\r\n                new Subject(\"Englisch\"),\r\n                new Subject(\"Mathematik\"),\r\n                new Subject(\"Finanz- und Rechnungswesen\"),\r\n                new Subject(\"Wirtschaft und Recht\"),\r\n                new History(),\r\n                new Sciences(),\r\n                new Project(\"IDAF FRW\", 2),\r\n                new Project(\"IDAF Informatik\", 2),\r\n                new Project(\"IDAF Deutsch\", 4),\r\n                new Project(\"IDAF Wirtschaft\", 4),\r\n                new Project(\"IDPA\", 6)\r\n            ];\r\n        }\r\n\r\n        this.state = {subjects: new Subjects(subjects)};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const subjects = this.state.subjects!!;\r\n        subjects.calculate();\r\n        this.setState({subjects: subjects});\r\n    }\r\n\r\n    private setGrade(grade: string, subjectIndex: number, gradeIndex: number) {\r\n        let g = Number(grade);\r\n        let subjects = this.state.subjects!!;\r\n\r\n        subjects.subjects[subjectIndex].grades[gradeIndex] = g;\r\n\r\n        subjects.calculate();\r\n        this.setState({subjects: subjects});\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const subjects = this.state.subjects!!;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h5\">Notenrechner</Typography>\r\n\r\n                <br/>\r\n\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Fach</TableCell>\r\n                                <TableCell align=\"right\">1. Semester</TableCell>\r\n                                <TableCell align=\"right\">2. Semester</TableCell>\r\n                                <TableCell align=\"right\">3. Semester</TableCell>\r\n                                <TableCell align=\"right\">4. Semester</TableCell>\r\n                                <TableCell align=\"right\">5. Semester</TableCell>\r\n                                <TableCell align=\"right\">6. Semester</TableCell>\r\n                                <TableCell align=\"right\">Schlussprüfung</TableCell>\r\n                                <TableCell align=\"right\">Durchschnitt</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {subjects.subjects.map((s, i) => (\r\n                                <TableRow key={i}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {s.name}\r\n                                    </TableCell>\r\n                                    {Array.from({length: 7}, (v, j) => (\r\n                                        <TableCell align=\"right\" key={j}>\r\n                                            {s.grades[j] !== -1 ?\r\n                                                <TextField size=\"small\" id={`grade-${i}-${j}`} label=\"Note\"\r\n                                                           variant=\"outlined\" value={s.grades[j]}\r\n                                                           inputProps={{min: \"1\", max: \"6\", step: \"0.5\"}}\r\n                                                           onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                                                               this.setGrade((event.target as HTMLInputElement).value, i, j)\r\n                                                           }}\r\n                                                           type=\"number\" InputLabelProps={{shrink: true,}}/>\r\n                                                : null}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                    <TableCell align=\"right\" style={{width: '140px'}}>\r\n                                        <Badge color=\"secondary\"\r\n                                               badgeContent={-(i < subjects.subjects.length - 5 && s.average() > 0 ?\r\n                                                   Math.max(4 - s.average(), 0) : subjects.projectMinusPoints)}>\r\n                                            <TextField size=\"small\" id={`grade-${i}-average`} label=\"Durchschnitt\"\r\n                                                       variant=\"outlined\" value={s.average()}\r\n                                                       InputProps={{readOnly: true,}}\r\n                                                       error={(i < subjects.subjects.length - 5 && s.average() < 4 && s.average() > 0) ||\r\n                                                       (i >= subjects.subjects.length - 5 && subjects.projectMinusPoints > 0)}\r\n                                                       type=\"number\" InputLabelProps={{shrink: true,}}/>\r\n                                        </Badge>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">Gesamtschnitt</TableCell>\r\n                                {Array.from({length: 7}, (v, j) => (\r\n                                    <TableCell align=\"right\" key={j}/>\r\n                                ))}\r\n                                <TableCell align=\"right\">\r\n                                    <TextField size=\"small\" id={`average`} label=\"Durchschnitt\"\r\n                                               variant=\"outlined\" value={subjects.average.toPrecision(2)}\r\n                                               InputProps={{readOnly: true,}}\r\n                                               type=\"number\" InputLabelProps={{shrink: true}}/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"right\" colSpan={9}>\r\n                                    <Typography variant=\"body1\"\r\n                                                color={subjects.minusPoints <= 2 ? \"textPrimary\" : \"error\"}>Minuspunkte: {subjects.minusPoints}</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <br/>\r\n\r\n                <div style={{textAlign: 'right', paddingBottom: '50px'}}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                        const {cookies} = this.props;\r\n                        if (cookies) {\r\n                            cookies.set(\"subjects\", JSON.stringify(subjects.subjects));\r\n                        }\r\n                    }}>\r\n                        Speichern\r\n                    </Button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport {\r\n    Button, Card, CardActions, CardContent, Checkbox, createStyles, Grid, IconButton, lighten,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead, TablePagination,\r\n    TableRow, TableSortLabel, Theme, Toolbar, Tooltip, Typography, useMediaQuery, useTheme,\r\n    WithStyles\r\n} from \"@material-ui/core\";\r\nimport {styles} from \"../styles\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport JSZip from \"jszip\";\r\nimport {saveAs} from 'file-saver';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\n\r\ninterface SummarySpecs {\r\n    subject: string;\r\n    topic: string;\r\n    date: string;\r\n    author: string;\r\n}\r\n\r\nclass Summary implements SummarySpecs {\r\n    author: string;\r\n    date: string;\r\n    parsedDate: number;\r\n    subject: string;\r\n    topic: string;\r\n    filename: string;\r\n    filepath: string;\r\n\r\n    constructor(v: SummarySpecs) {\r\n        this.author = v.author;\r\n\r\n        this.date = v.date;\r\n        this.parsedDate = moment(v.date, \"DD.MM.YYYY\").valueOf();\r\n\r\n        this.subject = v.subject;\r\n        this.topic = v.topic;\r\n\r\n        let file = this.author === \"RaviAnand Mohabir\" ? `${v.subject} - ${v.topic}.pdf` : `${v.subject} - ${v.topic} - ${v.author}.pdf`;\r\n\r\n        this.filename = file;\r\n        this.filepath = `${process.env.PUBLIC_URL}/res/docs/summaries/${file}`;\r\n    }\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n    disablePadding: boolean;\r\n    id: keyof SummarySpecs;\r\n    label: string;\r\n    orderBy?: keyof Summary;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n    {id: 'date', orderBy: 'parsedDate', disablePadding: true, label: 'Datum'},\r\n    {id: 'subject', disablePadding: false, label: 'Fach'},\r\n    {id: 'topic', disablePadding: false, label: 'Thema'},\r\n    {id: 'author', disablePadding: false, label: 'Autor'},\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Summary) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps & WithStyles<typeof styles>) {\r\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n    const createSortHandler = (property: keyof Summary) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{'aria-label': 'select all desserts'}}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.orderBy ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id || orderBy === headCell.orderBy ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id || orderBy === headCell.orderBy}\r\n                            direction={(orderBy === headCell.id || orderBy === headCell.orderBy) ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.orderBy ? headCell.orderBy : headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {(orderBy === headCell.id || orderBy === headCell.orderBy) ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                <TableCell padding=\"default\"> </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        highlight:\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    color: theme.palette.secondary.main,\r\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n                : {\r\n                    color: theme.palette.text.primary,\r\n                    backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n        title: {\r\n            flex: '1 1 100%',\r\n        },\r\n    }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n\r\n    downloadSelected(): void;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const classes = useToolbarStyles();\r\n    const {numSelected, downloadSelected} = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Zusammenfassungen\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? <Tooltip title=\"Download\">\r\n                <IconButton aria-label=\"download\" onClick={downloadSelected}>\r\n                    <GetAppIcon/>\r\n                </IconButton>\r\n            </Tooltip> : null}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\ninterface SummariesProps {\r\n    dense: boolean;\r\n    summaries: Summary[];\r\n}\r\n\r\nfunction SummariesSmall(props: SummariesProps & WithStyles<typeof styles>) {\r\n    const {classes, summaries} = props;\r\n\r\n    return (\r\n        <div className={classes.gridListRoot}>\r\n            {summaries.length > 0 ?\r\n                <Grid container spacing={1}>\r\n                    {stableSort(summaries, getComparator('desc', 'parsedDate'))\r\n                        .slice(0, 5)\r\n                        .map((summary, index) =>\r\n                            <Grid item xs={12} sm={6} key={index}>\r\n                                <Card className={classes.cardsRoot}\r\n                                      style={{height: '100%', display: \"grid\", gridTemplateRows: \"1fr auto\"}}\r\n                                      variant=\"outlined\">\r\n                                    <CardContent style={{alignSelf: \"stretch\"}}>\r\n                                        <Typography className={classes.cardsTitle} color=\"textSecondary\"\r\n                                                    gutterBottom>\r\n                                            {summary.date}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                            {summary.topic}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\" gutterBottom>\r\n                                            {summary.subject}\r\n                                        </Typography>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            {summary.author}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Button size=\"small\" href={summary.filepath} download\r\n                                                startIcon={<GetAppIcon/>}>\r\n                                            Herunterladen\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>)}\r\n                </Grid> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface SummariesState {\r\n    order: Order;\r\n    orderBy: keyof Summary;\r\n    selected: string[];\r\n    page: number;\r\n    rowsPerPage: number;\r\n}\r\n\r\nclass Summaries extends React.Component<SummariesProps & WithStyles<typeof styles>, SummariesState> {\r\n    constructor(props: SummariesProps & WithStyles<typeof styles>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            order: 'desc',\r\n            orderBy: \"parsedDate\",\r\n            selected: [],\r\n            page: 0,\r\n            rowsPerPage: 5\r\n        };\r\n\r\n        this.setOrder = this.setOrder.bind(this);\r\n        this.setOrderBy = this.setOrderBy.bind(this);\r\n        this.setSelected = this.setSelected.bind(this);\r\n        this.setPage = this.setPage.bind(this);\r\n        this.setRowsPerPage = this.setRowsPerPage.bind(this);\r\n\r\n        this.downloadSelected = this.downloadSelected.bind(this);\r\n        this.getSummaryBlobs = this.getSummaryBlobs.bind(this);\r\n    }\r\n\r\n    private setOrder(order: Order) {\r\n        this.setState({order: order});\r\n    }\r\n\r\n    private setOrderBy(orderBy: keyof Summary) {\r\n        this.setState({orderBy: orderBy});\r\n    }\r\n\r\n    private setSelected(selected: string[]) {\r\n        this.setState({selected: selected});\r\n    }\r\n\r\n    private setPage(page: number) {\r\n        this.setState({page: page});\r\n    }\r\n\r\n    private setRowsPerPage(rowsPerPage: number) {\r\n        this.setState({rowsPerPage: rowsPerPage});\r\n    }\r\n\r\n    private getSummaryBlobs(summaries: Summary[], summaryCallback: (summary: Summary, blob: Blob) => void, callback: () => void) {\r\n        if (summaries.length > 0) {\r\n            const summary = summaries[0];\r\n            summaries.shift();\r\n\r\n            fetch(summary.filepath)\r\n                .then(response => response.blob())\r\n                .then(blob => {\r\n                    summaryCallback(summary, blob);\r\n                    this.getSummaryBlobs(summaries, summaryCallback, callback);\r\n                });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    private downloadSelected() {\r\n        const {selected} = this.state;\r\n        const {summaries} = this.props;\r\n        const selectedSummaries = selected.map(s => summaries.filter(summary => summary.filename === s)[0]);\r\n\r\n        let zip = new JSZip();\r\n        this.getSummaryBlobs(selectedSummaries, (summary, blob) => {\r\n            zip.file(summary.filename, blob, {base64: true});\r\n        }, () => {\r\n            zip.generateAsync({type: \"blob\"})\r\n                .then(function (content) {\r\n                    saveAs(content, \"summaries.zip\");\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, dense, summaries} = this.props;\r\n        const {order, orderBy, selected, page, rowsPerPage} = this.state;\r\n\r\n        const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Summary) => {\r\n            const isAsc = orderBy === property && order === 'asc';\r\n            this.setOrder(isAsc ? 'desc' : 'asc');\r\n            this.setOrderBy(property);\r\n        };\r\n\r\n        const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            if (event.target.checked) {\r\n                const newSelecteds = summaries.map(s => s.filename);\r\n                this.setSelected(newSelecteds);\r\n                return;\r\n            }\r\n            this.setSelected([]);\r\n        };\r\n\r\n        const handleClick = (event: React.MouseEvent<unknown>, filename: string) => {\r\n            let newSelected: string[] = [];\r\n            let selectedIndex = selected.indexOf(filename);\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, filename);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            this.setSelected(newSelected);\r\n        };\r\n\r\n        const handleChangePage = (event: unknown, newPage: number) => {\r\n            this.setPage(newPage);\r\n        };\r\n\r\n        const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n            this.setRowsPerPage(parseInt(event.target.value, 10));\r\n            this.setPage(0);\r\n        };\r\n\r\n        const isSelected = (filename: string) => selected.indexOf(filename) !== -1;\r\n        return (\r\n            <React.Fragment>\r\n                {summaries.length > 0 ? <Paper className={classes.paper}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} downloadSelected={this.downloadSelected}/>\r\n                    <TableContainer>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-label=\"simple table\"\r\n                            size={dense ? \"small\" : \"medium\"}>\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={summaries.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(summaries, getComparator(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((summary, index) => {\r\n                                        const isItemSelected = isSelected(summary.filename);\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow hover\r\n                                                      onClick={(event) => handleClick(event, summary.filename)}\r\n                                                      role=\"checkbox\"\r\n                                                      aria-checked={isItemSelected}\r\n                                                      tabIndex={-1}\r\n                                                      key={index}\r\n                                                      selected={isItemSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" component=\"th\" scope=\"row\">\r\n                                                    <Checkbox\r\n                                                        checked={isItemSelected}\r\n                                                        inputProps={{'aria-labelledby': labelId}}\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {summary.date}\r\n                                                </TableCell>\r\n                                                <TableCell>{summary.subject}</TableCell>\r\n                                                <TableCell>{summary.topic}</TableCell>\r\n                                                <TableCell>{summary.author}</TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <Button\r\n                                                        href={summary.filepath}\r\n                                                        download\r\n                                                        size={dense ? \"small\" : \"medium\"}\r\n                                                        variant=\"contained\"\r\n                                                        className={classes.button}\r\n                                                        startIcon={<GetAppIcon/>}>\r\n                                                        Herunterladen\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={summaries.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper> : null}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ninterface SummariesContainerProps {\r\n    component: \"Summaries\" | \"SummariesSmall\";\r\n}\r\n\r\nexport default function SummariesContainer(props: SummariesContainerProps & WithStyles<typeof styles>) {\r\n    const {component, classes} = props;\r\n\r\n    const [summaries, setSummaries] = React.useState<Summary[]>([]);\r\n\r\n    fetch(`${process.env.PUBLIC_URL}/res/docs/summaries/summaries.json`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText);\r\n            }\r\n            return response.json() as Promise<SummarySpecs[]>;\r\n        })\r\n        .then(data => {\r\n            let summaries = data.map(s => new Summary(s));\r\n            setSummaries(summaries);\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n        });\r\n\r\n    const theme = useTheme();\r\n    const dense = !useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return component === \"Summaries\" ? <Summaries classes={classes} dense={dense} summaries={summaries}/> :\r\n        <SummariesSmall classes={classes} summaries={summaries} dense={dense}/>;\r\n}","import {Tab, Tabs, useMediaQuery, useTheme, WithStyles} from \"@material-ui/core\";\r\nimport {styles} from \"../styles\";\r\nimport React from \"react\";\r\nimport {CalculatorSmall} from \"../calculator/Calculator\";\r\nimport {ReactCookieProps} from \"react-cookie\";\r\nimport SummariesContainer from \"../summaries/Summaries\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div role=\"tabpanel\"\r\n             hidden={value !== index}\r\n             id={`vertical-tabpanel-${index}`}\r\n             aria-labelledby={`vertical-tab-${index}`}\r\n             style={{padding: '10px'}}\r\n             {...other}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function Home(props: WithStyles<typeof styles> & ReactCookieProps) {\r\n    const theme = useTheme();\r\n    const vertical = useMediaQuery(theme.breakpoints.up('md'));\r\n    const {classes, cookies} = props;\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={vertical ? classes.verticalTabsRoot : classes.horizontalTabsRoot}>\r\n            {vertical ?\r\n                <Tabs\r\n                    orientation={\"vertical\"}\r\n                    variant=\"scrollable\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"Vertical tabs example\"\r\n                    className={classes.verticalTabs}>\r\n                    <Tab label=\"Zusammenfassungen\" {...a11yProps(0)} />\r\n                    <Tab label=\"Notenrechner\" {...a11yProps(1)} />\r\n                </Tabs> :\r\n                <Tabs value={value}\r\n                      onChange={handleChange}\r\n                      aria-label=\"simple tabs example\"\r\n                      indicatorColor=\"secondary\"\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                      className={classes.horizontalTabs}>\r\n                    <Tab label=\"Zusammenfassungen\" {...a11yProps(0)} />\r\n                    <Tab label=\"Notenrechner\" {...a11yProps(1)} />\r\n                </Tabs>}\r\n            <TabPanel value={value} index={0}>\r\n                <SummariesContainer component=\"SummariesSmall\" classes={classes}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <CalculatorSmall classes={classes} cookies={cookies}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {createMuiTheme, WithStyles} from '@material-ui/core';\nimport {withStyles, ThemeProvider} from '@material-ui/core/styles';\nimport Layout from \"./components/Layout\";\nimport {styles} from './components/styles';\nimport {Route, Switch} from 'react-router';\nimport Calculator from \"./components/calculator/Calculator\";\nimport {ReactCookieProps, withCookies} from 'react-cookie';\nimport {compose} from 'redux';\nimport Home from \"./components/home/Home\";\nimport SummariesContainer from \"./components/summaries/Summaries\";\n\nconst theme = createMuiTheme();\n\nfunction App(props: WithStyles<typeof styles> & ReactCookieProps) {\n    const {classes} = props;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Layout classes={classes}>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <Home classes={classes} cookies={props.cookies}/>\n                    </Route>\n                    <Route path=\"/calculator\">\n                        <Calculator classes={classes} cookies={props.cookies}/>\n                    </Route>\n                    <Route path=\"/summaries\">\n                        <SummariesContainer component=\"Summaries\" classes={classes}/>\n                    </Route>\n                </Switch>\n            </Layout>\n        </ThemeProvider>\n    );\n}\n\nexport default compose(\n    withCookies,\n    withStyles(styles)\n)(App) as any;","import {createStyles, fade, Theme} from \"@material-ui/core\";\r\n\r\nexport const styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    drawerTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    horizontalTabsRoot: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    verticalTabsRoot: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n    },\r\n    horizontalTabs: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    verticalTabs: {\r\n        minWidth: 200,\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    cardsRoot: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    cardsTitle: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    tableRoot: {\r\n        width: '100%',\r\n    },\r\n    tablePaper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    gridListRoot: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 500,\r\n        height: 450,\r\n    },\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {CookiesProvider} from \"react-cookie\";\n\nReactDOM.render(\n    <CookiesProvider>\n        <Router basename=\"/Im17A\">\n            <App/>\n        </Router>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}